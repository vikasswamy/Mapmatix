/*!
 * frustum-intersects v0.1.0
 * LICENSE : MIT
 * (c) 2018-2018 fuzhenn
 */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.frustum={})}(this,function(e){"use strict";
/*!
    * Contains code from THREE.js
    * MIT License
    * https://github.com/mrdoob/three.js
    */for(var m=[],r=0;r<6;r++)m[r]=[];var o=[];function u(e){var r=e,t=r[0],n=r[1],f=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],a=r[8],d=r[9],p=r[10],v=r[11],h=r[12],x=r[13],y=r[14],l=r[15];b(m[0],o-t,s-u,v-a,l-h),b(m[1],o+t,s+u,v+a,l+h),b(m[2],o+n,s+i,v+d,l+x),b(m[3],o-n,s-i,v-d,l-x),b(m[4],o-f,s-c,v-p,l-y),b(m[5],o+f,s+c,v+p,l+y)}var i=1/6;function b(e,r,t,n,f){return e[0]=r*i,e[1]=t*i,e[2]=n*i,e[3]=f*i,e}function c(e,r){return e[0]*r[0]+e[1]*r[1]+e[2]*r[2]+e[3]}e.intersectsSphere=function(e,r,t){u(e);for(var n=r[0],f=-r[1],o=0;o<6;o++)if((!t||"0"!==t.charAt(o))&&c(m[o],n)<f)return!1;return!0},e.intersectsBox=function(e,r,t){u(e);for(var n=0;n<6;n++)if(!t||"0"!==t.charAt(n)){var f=m[n];if(o[0]=0<f[0]?r[1][0]:r[0][0],o[1]=0<f[1]?r[1][1]:r[0][1],o[2]=0<f[2]?r[1][2]:r[0][2],c(f,o)<0)return!1}return!0},Object.defineProperty(e,"__esModule",{value:!0})});
